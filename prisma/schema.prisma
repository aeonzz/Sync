// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(uuid())
  studentId   Int         @unique
  username    String      @unique
  password    String
  avatarUrl   String?
  displayName String?
  bio         String?     @db.Text
  onboarded   Boolean     @default(false)
  createdAt   DateTime    @default(now()) @db.Timestamp(6)
  updatedAt   DateTime    @updatedAt @db.Timestamp(6)
  Post        Post[]
  StudentData StudentData @relation(fields: [studentId], references: [studentId])
  Urls        Urls[]
}

model Post {
  postId     String   @id @default(uuid())
  sequenceId Int      @default(autoincrement())
  title      String?
  content    String
  createdAt  DateTime @default(now()) @db.Timestamp(6)
  updatedAt  DateTime @updatedAt @db.Timestamp(6)
  author     User     @relation(fields: [authorId], references: [id])
  authorId   String
  imageUrls  Image[]
}

model Image {
  id     Int     @id @default(autoincrement())
  url    String? @db.VarChar(255)
  postId String
  post   Post    @relation(fields: [postId], references: [postId])
}

model StudentData {
  id         Int      @id @default(autoincrement())
  studentId  Int      @unique
  name       String   @unique
  yearLevel  String
  department String
  hasAccount Boolean  @default(false)
  createdAt  DateTime @default(now()) @db.Timestamp(6)
  updatedAt  DateTime @updatedAt @db.Timestamp(6)
  User       User?
}

model Urls {
  id        Int      @id @default(autoincrement())
  url       String
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt @db.Timestamp(6)
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}